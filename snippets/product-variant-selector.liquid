{%- assign selected_variant = product.selected_or_first_available_variant -%}
{%- assign color_label = 'color,colour,couleur,cor,colore,farbe,색,色,カラー,färg,farve,szín,barva' | split: ',' -%}

{%- unless product.has_only_default_variant -%}
  <div class="product-form__variants" {{ block.shopify_attributes }}>
    {%- for option in product.options_with_values -%}
      {%- assign downcase_option = option.name | downcase -%}
      {%- capture option_name -%}{{ section.id }}-{{ product.id }}-{{ forloop.index }}{%- endcapture -%}

      {%- assign option_selector_type = 'select' -%}

      {%- if block.settings.color_mode != 'block' and block.settings.color_mode != 'dropdown' and color_label contains downcase_option -%}
        {%- comment -%}NOTE: even if the merchant is using the mode to display variant images, if ALL variant do not have an associated image, we fallback to color{%- endcomment -%}

        {%- assign has_image_attached_to_all_variants = true -%}

        {%- for variant in product.variants -%}
          {%- unless variant.image -%}
            {%- assign has_image_attached_to_all_variants = false -%}
            {%- break -%}
          {%- endunless -%}
        {%- endfor -%}

        {%- if block.settings.color_mode == 'color' or has_image_attached_to_all_variants == false -%}
          {%- assign option_selector_type = 'color' -%}
        {%- else -%}
          {%- assign option_selector_type = 'variant' -%}
        {%- endif -%}
      {%- else -%}
        {%- if color_label contains downcase_option -%}
          {%- if block.settings.color_mode == 'block' -%}
            {%- assign option_selector_type = 'block' -%}
          {%- endif -%}
        {%- elsif block.settings.selector_mode == 'block' -%}
          {%- assign option_selector_type = 'block' -%}
        {%- endif -%}
      {%- endif -%}

      <div class="product-form__option" data-selector-type="{{ option_selector_type }}">
        {%- case option_selector_type -%}
          {%- when 'color' -%}
            <span class="product-form__option-name text--strong">{{ option.name }}: <span class="product-form__selected-value">{{ option.selected_value }}</span></span>

            <div class="color-swatch-list color-swatch-list--large">
              {%- assign color_swatch_config = settings.color_swatch_config | newline_to_br | split: '<br />' -%}

              {%- for value in option.values -%}
                {%- assign downcased_value = value | downcase -%}
                {%- capture color_id -%}{{ option_name }}-{{ forloop.index }}{%- endcapture -%}

                <div class="color-swatch {% if downcased_value == 'white' or downcased_value == 'blanc' %}color-swatch--white{% endif %}">
                  <input class="color-swatch__radio product-form__single-selector" type="radio" name="{{ option_name }}" id="{{ color_id }}" value="{{ value | escape }}" {% if option.selected_value == value %}checked{% endif %} data-option-position="{{ option.position }}">
                  <label class="color-swatch__item" for="{{ color_id }}" style="{% render 'color-swatch-style', color_swatch_config: color_swatch_config, value: downcased_value %}" title="{{ value | escape }}">
                    <span class="visually-hidden">{{ value }}</span>
                    {%- render 'icon', icon: 'cross-sold-out' -%}
                  </label>
                </div>
              {%- endfor -%}
            </div>

          {%- when 'variant' -%}
            <span class="product-form__option-name text--strong">{{ option.name }}: <span class="product-form__selected-value">{{ option.selected_value }}</span></span>

            <div class="variant-swatch-list">
              {%- capture option_name -%}option{{ option.position }}{%- endcapture -%}

              {%- for value in option.values -%}
                {%- capture variant_swatch_id -%}{{ option_name }}-{{ forloop.index }}{%- endcapture -%}

                {%- for variant in product.variants -%}
                  {%- if variant[option_name] == value and variant.image -%}
                    <div class="variant-swatch">
                      <input class="variant-swatch__radio product-form__single-selector" type="radio" name="{{ option_name }}" id="{{ variant_swatch_id }}" value="{{ value | escape }}" {% if option.selected_value == value %}checked{% endif %} data-option-position="{{ option.position }}">

                      <label class="variant-swatch__item" for="{{ variant_swatch_id }}" title="{{ value | escape }}">
                        <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: variant.image.aspect_ratio }}%">
                          {{- variant.image | image_url: width: variant.image.width | image_tag: loading: 'lazy', sizes: '120px', widths: '120,240' -}}
                        </div>

                        {% render 'icon', icon: 'cross-sold-out' %}
                      </label>
                    </div>

                    {%- break -%}
                  {%- endif -%}
                {%- endfor -%}
              {%- endfor -%}
            </div>

          {%- when 'block' -%}
            <span class="product-form__option-name text--strong">{{ option.name }}: <span class="product-form__selected-value">{{ option.selected_value }}</span></span>

            <div class="block-swatch-list">
              {%- for value in option.values -%}
                {%- capture block_swatch_id -%}{{ option_name }}-{{ forloop.index }}{%- endcapture -%}

                <div class="block-swatch">
                  <input class="block-swatch__radio product-form__single-selector" type="radio" name="{{ option_name }}" id="{{ block_swatch_id }}" value="{{ value | escape }}" {% if option.selected_value == value %}checked{% endif %} data-option-position="{{ option.position }}">
                  <label class="block-swatch__item" for="{{ block_swatch_id }}" title="{{ value | escape }}">
                    <span class="block-swatch__item-text">{{ value }}</span>
                  </label>
                </div>
              {%- endfor -%}
            </div>

          {%- when 'select' -%}
            <label for="{{ option_name }}" class="product-form__option-name text--strong">{{ option.name }}: <span class="product-form__selected-value">{{ option.selected_value }}</span></label>

            <div class="select-wrapper select-wrapper--primary">
              {%- render 'icon', icon: 'arrow-bottom' -%}

              <select class="product-form__single-selector" name="{{ option_name }}" id="{{ option_name }}" data-option-position="{{ option.position }}">
                {%- for value in option.values -%}
                  <option value="{{ value | escape }}" {% if value == option.selected_value %}selected="selected"{% endif %}>{{ value }}</option>
                {%- endfor -%}
              </select>
            </div>
        {%- endcase -%}
      </div>
    {%- endfor -%}

    <div class="no-js product-form__option">
      <label class="product-form__option-name text--strong" for="product-select-{{ product.id }}">{{ 'product.form.variant' | t }}</label>

      <div class="select-wrapper select-wrapper--primary">
        <select id="product-select-{{ product.id }}" name="id">
          {%- for variant in product.variants -%}
            <option {% if variant == selected_variant %}selected="selected"{% endif %} {% unless variant.available %}disabled="disabled"{% endunless %} value="{{ variant.id }}" data-sku="{{ variant.sku }}">{{ variant.title }} - {{ variant.price | money }}</option>
          {%- endfor -%}
        </select>
      </div>
    </div>
  </div>
{%- else -%}
  <input type="hidden" name="id" data-sku="{{ selected_variant.sku }}" value="{{ selected_variant.id }}">
{%- endunless -%}

<div class="product-form__info-list">
  <div class="product-form__info-item">
    <span class="product-form__info-title text--strong">{{ 'product.form.price' | t }}:</span>

    <div class="product-form__info-content" role="region" aria-live="polite">
      <div class="price-list">
        {%- if selected_variant.compare_at_price > selected_variant.price -%}
          <span class="price price--highlight">
            <span class="visually-hidden">{{ 'product.general.sale_price' | t }}</span>

            {%- if settings.currency_code_enabled -%}
              {{- selected_variant.price | money_with_currency -}}
            {%- else -%}
              {{- selected_variant.price | money -}}
            {%- endif -%}
          </span>

          <span class="price price--compare">
            <span class="visually-hidden">{{ 'product.general.regular_price' | t }}</span>

            {%- if settings.currency_code_enabled -%}
              {{- selected_variant.compare_at_price | money_with_currency -}}
            {%- else -%}
              {{- selected_variant.compare_at_price | money -}}
            {%- endif -%}
          </span>
        {%- else -%}
          <span class="price">
            <span class="visually-hidden">{{ 'product.general.sale_price' | t }}</span>

            {%- if settings.currency_code_enabled -%}
              {{- selected_variant.price | money_with_currency -}}
            {%- else -%}
              {{- selected_variant.price | money -}}
            {%- endif -%}
          </span>
        {%- endif -%}
      </div>

      <div class="product-form__price-info" style="display: {% if selected_variant.unit_price_measurement %}block{% else %}none{% endif %}">
        <div class="unit-price-measurement">
          <span class="unit-price-measurement__price">{{ selected_variant.unit_price | money }}</span>
          <span class="unit-price-measurement__separator">/ </span>

          <span class="unit-price-measurement__reference-value" {%- if selected_variant.unit_price_measurement.reference_value == 1 -%}style="display: none"{% endif %}>
            {{- selected_variant.unit_price_measurement.reference_value -}}
          </span>

          <span class="unit-price-measurement__reference-unit">{{ selected_variant.unit_price_measurement.reference_unit }}</span>
        </div>
      </div>

      {{- form | payment_terms -}}

      {%- if block.settings.show_taxes_included -%}
        {%- if cart.taxes_included or shop.shipping_policy.body != blank -%}
          <p class="product-form__price-info">
            {%- if cart.taxes_included -%}
              {{ 'product.general.include_taxes' | t }}
            {%- endif -%}

            {%- if shop.shipping_policy.body != blank -%}
              {{ 'product.general.shipping_policy_html' | t: link: shop.shipping_policy.url }}
            {%- endif -%}
          </p>
        {%- endif -%}
      {%- endif -%}
    </div>
  </div>

  {%- if block.settings.show_inventory_quantity and product.template_suffix != 'pre-order' -%}
    <div class="product-form__info-item">
      <span class="product-form__info-title text--strong">{{ 'product.form.inventory' | t }}:</span>

      <div class="product-form__info-content">
        {%- if selected_variant.inventory_management -%}
          {%- if selected_variant.available -%}
            {%- if selected_variant.inventory_quantity <= 0 and selected_variant.requires_shipping -%}
              {%- if selected_variant.incoming -%}
                {%- capture next_incoming_date -%}{{ selected_variant.next_incoming_date | date: format: 'date' }}{%- endcapture -%}
                <span class="product-form__inventory inventory inventory--high">{{ 'product.form.incoming_stock' | t: next_incoming_date: next_incoming_date }}</span>
              {%- else -%}
                <span class="product-form__inventory inventory inventory--high">{{ 'product.form.oversell_stock' | t }}</span>
              {%- endif -%}
            {%- elsif block.settings.low_inventory_threshold > 0 -%}
              {%- if selected_variant.inventory_quantity <= block.settings.low_inventory_threshold -%}
                <span class="product-form__inventory inventory inventory--low">{{ 'product.form.low_stock_with_quantity_count' | t: count: selected_variant.inventory_quantity }}</span>
              {%- else -%}
                <span class="product-form__inventory inventory inventory--high">{{ 'product.form.in_stock_with_quantity_count' | t: count: selected_variant.inventory_quantity }}</span>
              {%- endif -%}
            {%- else -%}
              <span class="product-form__inventory inventory inventory--high">{{ 'product.form.in_stock' | t }}</span>
            {%- endif -%}
          {%- else -%}
            {%- if selected_variant.incoming -%}
              {%- capture next_incoming_date -%}{{ selected_variant.next_incoming_date | date: format: 'date' }}{%- endcapture -%}
              <span class="product-form__inventory inventory">{{ 'product.form.incoming_stock' | t: next_incoming_date: next_incoming_date }}</span>
            {%- else -%}
              <span class="product-form__inventory inventory">{{ 'product.form.sold_out' | t }}</span>
            {%- endif -%}
          {%- endif -%}
        {%- else -%}
          <span class="product-form__inventory inventory inventory--high">{{ 'product.form.in_stock' | t }}</span>
        {%- endif -%}

        {%- for tag in product.tags -%}
          {%- if tag contains '__stock:' -%}
            {%- assign stock_countdown_max = tag | split: '__stock:' | last | times: 1.0 -%}
            {%- assign stock_countdown_progress = selected_variant.inventory_quantity | divided_by: stock_countdown_max | times: 100.0 | at_least: 0 | at_most: 100 -%}

            <span class="inventory-bar {% if stock_countdown_progress == 0 %}inventory-bar--hidden{% endif %}" data-stock-countdown-max="{{ stock_countdown_max }}">
              <span class="inventory-bar__progress" style="width: 100%"></span>
            </span>

            {%- break -%}
          {%- endif -%}
        {%- endfor -%}
      </div>
    </div>
  {%- endif -%}

  {%- if product.template_suffix != 'contact' -%}
    {%- if block.settings.show_quantity_selector -%}

{% comment %}Quantity input and coverage area calculator {% endcomment %}
      
<div class="calculator-wrapper">

  <div class="area-input">
  <div class="coverage">
    <div class="flex">
  {%- render 'icon', icon: 'sale', stroke_width: 2, class: 'sale-icon' -%}
   <span class="h6 heading" style="color: red; font-weight: bold;{% for tag in product.tags %}{% if tag contains 'map_' %} text-decoration: line-through; {% endif %}{% endfor %}">{{ product.price | divided_by: product.metafields.custom.coverage | money }} sq ft</span>
    </div>
  <h5 class="h6 heading">{{ product.metafields.custom.calculator_description }}</h5>
  <input id="coverage_area" type="text" class="coverage-input" name="contact[coverage_area]" aria-label="Coverage Area" value="{{ product.metafields.custom.coverage }}" required placeholder="{{ product.metafields.custom.coverage }}">
  <p id="total_coverage" class="h6 heading" style="margin-top: 25px;">{{ product.metafields.custom.coverage }} {{ product.metafields.custom.coverage_description }}</p>
   </div>
  

    <div class="box-quantity">
      <span class="h5" style="{% for tag in product.tags %}{% if tag contains 'map_' %} text-decoration: line-through; {% endif %}{% endfor %}">{{ selected_variant.price | money }} / {{ product.metafields.custom.uom }}</span>
       <h5 class="h6 heading">Quantity</h5>
      <div class="quantity-selector quantity-selector--product">
        <button type="button" class="quantity-selector__button" data-action="decrease-picker-quantity" aria-label="{{ 'cart.items.decrease_quantity' | t }}" title="{{ 'cart.items.decrease_quantity' | t }}">{% render 'icon', icon: 'minus' %}</button>
        <input
          id="quantity"
          name="quantity"
          value="{%- if product.metafields.product.minimum_quantity != blank -%}{{ product.metafields.product.minimum_quantity }}{%- else -%}1{%- endif -%}"
          data-min-value="{%- if product.metafields.product.minimum_quantity != blank -%}{{ product.metafields.product.minimum_quantity }}{%- else -%}1{%- endif -%}"
          aria-label="{{ 'product.form.quantity' | t }}"
          class="quantity-selector__value"
          inputmode="numeric"
          size="3"
          
        >
        <button type="button" class="quantity-selector__button" data-action="increase-picker-quantity" aria-label="{{ 'cart.items.increase_quantity' | t }}" title="{{ 'cart.items.increase_quantity' | t }}">{% render 'icon', icon: 'plus' %}</button>
      </div>
      <h5 id="total_price" class="h5 heading price" style="margin-top: 10px; {% for tag in product.tags %}{% if tag contains 'map_' %} text-decoration: line-through; {% endif %}{% endfor %}">{{ product.price | money }}</h5>
    </div>
    
  </div>
    <div style="display: flex; flex-direction: column; text-align: center;">
      {% for tag in product.tags %}
      {% if tag contains 'map_' %}
      <button class="sale-price" data-action="add-to-cart">CLICK HERE FOR SALE PRICE</button>
      {% endif %}
        {% endfor %}
      <p id="quantity-limit-message" style="color: red;">Quantity limit message here</p>
    </div>

  
</div>
<style>

  @media (min-width: 768px) { 
  
  .area-input {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    text-align: center;
}
}

/* Mobile and tablets */
@media (max-width: 768px) { 
    .area-input {
        flex-direction: column;
    }
}
  
  .calculator-wrapper {
    margin-bottom: 20px;
    padding: 1rem 0; 
    max-width: 500px; 

  }

  #coverage-area {
    text-align: center;
  }

  .box-quantity {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-evenly;
  }

   .flex {
    display: flex;
    align-items: center;
    justify-content: center;
   }

  .sale-icon {
    fill: white !important;
    background-color: red;
    border-radius: 100%;
    margin-right: 5px;
    height: 1.5em;
    width: 1.5em;
    color: #fff;
    padding: 0.4em;
  }

  .area-input {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    text-align: center;
}

  .coverage {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-evenly;
  }

  .coverage-input {
    width: 230px;
    height: 44px;
    border: solid 1px #e1e3e4;
    border-radius: 5px;
    text-align: center;
  }

  .sale-price {
    margin-bottom: 0; 
    margin-top: 10px; 
    padding: 0.4rem; 
    background-color: green; 
    color: white; 
    text-align: center; 
    border-radius: 5px;
  }
  
</style>

 <script>
/* Script that handles the square footage calculator in product pages */
const inpQuantity = document.getElementById("quantity");
const squareFeetInput = document.getElementById("coverage_area");
const totalSquareInput = document.getElementById("total_coverage");
const totalPriceInput = document.getElementById("total_price");
const baseCoverageArea = parseFloat(squareFeetInput.value) || 0;
const minQuantity = parseFloat(inpQuantity.dataset.minValue) || 1;
let originalSquareFeet = parseFloat(squareFeetInput.value) || 0;
let originalPrice = parseFloat(totalPriceInput.textContent.replace(/[^0-9.]/g, '')) || 0;
let manualInput = false;

squareFeetInput.addEventListener("input", function() {
  originalSquareFeet = parseFloat(squareFeetInput.value) || 0;
  manualInput = true;
  adjustBoxQuantity();
});

inpQuantity.addEventListener("input", function() {
  manualInput = true; // set manual input flag to true to indicate that the value was changed manually
  calculateSquareFeet();
});

function adjustBoxQuantity() {
  const coveragePerBox = {{ product.metafields.custom.coverage }}; // Replace with the correct value
  const enteredCoverage = parseFloat(squareFeetInput.value) || 0; 
  let quantity = Math.ceil(enteredCoverage / coveragePerBox);

  if (quantity > 9999) {
    quantity = 9999;
    document.getElementById("quantity-limit-message").innerText = "We have adjusted the number of products entered as the maximum quantity threshold is 9,999. If you need to purchase a higher quantity, please contact Customer Care at 888-868-5002";
  } else {
    document.getElementById("quantity-limit-message").innerText = "";
  }

  inpQuantity.value = quantity; 
  calculateSquareFeet(); 
}

function calculateSquareFeet() {
  let quantity = parseFloat(inpQuantity.value) || 0;

  if (quantity >= 9999) {
    quantity = 9999;
    inpQuantity.value = 9999;
    document.getElementById("quantity-limit-message").innerText = "We have adjusted the number of products entered as the maximum quantity threshold is 9,999. If you need to purchase a higher quantity, please contact Customer Care at 888-868-5002";
  } else {
    document.getElementById("quantity-limit-message").innerText = "";
  }

  const totalResult = quantity * baseCoverageArea;
  const totalResultFixed = totalResult.toFixed(2); 
  totalSquareInput.innerHTML = `Covers ${totalResultFixed} {{ product.metafields.custom.coverage_description }}`;
  if (!manualInput) {
    squareFeetInput.value = totalResultFixed; 
  }
  const totalPrice = (originalPrice * quantity).toFixed(2);
  totalPriceInput.innerHTML = `$${totalPrice}`;
}

if (inpQuantity && squareFeetInput && totalSquareInput) {
  inpQuantity.addEventListener("input", function() {
    manualInput = false;
    calculateSquareFeet();
  });
  const subtractBtn = document.querySelector("[data-action='decrease-picker-quantity']");
  const addBtn = document.querySelector("[data-action='increase-picker-quantity']");
  if (subtractBtn && addBtn) {
    subtractBtn.addEventListener('click', function() {
      setTimeout(function() {
        manualInput = false;
        calculateSquareFeet();
      }, 0); 
    });
    addBtn.addEventListener('click', function() {
      setTimeout(function() {
        manualInput = false;
        calculateSquareFeet();
      }, 0); 
    });
  }
  calculateSquareFeet();
}

  </script>
  
    {%- else -%}
      <input type="hidden" name="quantity" value="1">
    {%- endif -%}
  {%- endif -%}
</div>